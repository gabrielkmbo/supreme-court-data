) +
custom_theme  # Apply custom theme
custom_theme <- theme_minimal() +
theme(
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
legend.title = element_blank(),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_rect(fill = "white", color = "black"),
panel.border = element_rect(color = "black", fill = NA)
)
ggplot(df, aes(x = State, y = Y)) +
geom_point(color = "dodgerblue", alpha = 0.7, size = 3) +  # Customize point appearance
scale_x_discrete(labels = function(x) ifelse(seq_along(x) %% 2 == 0, "", x)) +  # Include every other state name
labs(
x = "State",
y = "Public Welfare State Expenditures Per Capita",
title = "State Welfare Expenditures vs. State"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +  # Rotate x-axis labels for better readability
custom_theme  # Apply custom theme
custom_theme <- theme_minimal() +
theme(
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
legend.title = element_blank(),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_rect(fill = "white", color = "black"),
panel.border = element_rect(color = "black", fill = NA)
)
ggplot(merged_data, aes(x = State, y = Y)) +
geom_point(color = "dodgerblue", alpha = 0.7, size = 3) +  # Customize point appearance
scale_x_discrete(labels = function(x) ifelse(seq_along(x) %% 2 == 0, "", x)) +  # Include every other state name
labs(
x = "State",
y = "Public Welfare State Expenditures Per Capita",
title = "State Welfare Expenditures vs. State"
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +  # Rotate x-axis labels for better readability
custom_theme  # Apply custom theme
custom_theme <- theme_minimal() +
theme(
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
legend.title = element_blank(),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_rect(fill = "white", color = "black"),
panel.border = element_rect(color = "black", fill = NA)
)
ggplot(merged_data, aes(x = Dollar, y = HomelessPopulationPer10kResidents)) +
geom_point() +
labs(x = "Public Welfare State Expenditures Per Capita", y = "Homelessness Population Per 10K Residents by State", title = "State Welfare Expenditures vs. Homelessness Population") +
custom_theme
custom_theme <- theme_minimal() +
theme(
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
legend.title = element_blank(),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_rect(fill = "white", color = "black"),
panel.border = element_rect(color = "black", fill = NA)
)
ggplot(merged_data, aes(x = HomelessPopulationPer10kResidents, y = Dollar)) +
geom_point() +
labs(x = "Public Welfare State Expenditures Per Capita", y = "Homelessness Population Per 10K Residents by State", title = "State Welfare Expenditures vs. Homelessness Population") +
custom_theme
custom_theme <- theme_minimal() +
theme(
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
legend.title = element_blank(),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_rect(fill = "white", color = "black"),
panel.border = element_rect(color = "black", fill = NA)
)
ggplot(merged_data, aes(x = Dollar, y = HomelessPopulationPer10kResidents)) +
geom_point() +
scale_x_continuous(breaks = seq(0, 60, by = 0.5)) +  # Adjust the 'by' argument to control spacing
scale_y_continuous(breaks = seq(1000, 4000, by = 500))  # Adjust the 'by' argument to control spacing
wel_data_set$Dollar <- wel_data_set$Dollar / 10
wel_data_subset$Dollar <- wel_data_set$Dollar / 10
wel_data_subset <- wel_data[, c("State", "Dollar")]
wel_data_subset$Dollar <- wel_data_set$Dollar / 10
View(wel_data_subset)
View(wel_data)
file_path <- "~/Downloads/homeless-population-by-state-2024.json"
home_data <- fromJSON(file_path)
file_path2 <- "~/Downloads/welfareData.csv"
wel_data <- read.csv(file_path2)
home_data_subset <- home_data[, c("State", "HomelessPopulationPer10kResidents")]
file_path <- "~/Downloads/homeless-population-by-state-2024.json"
home_data <- fromJSON(file_path)
file_path2 <- "~/Downloads/welfareData.csv"
wel_data <- read.csv(file_path2)
View(home_data)
View(wel_data)
home_data_subset <- home_data[, c("State", "HomelessPopulationPer10kResidents")]
View(home_data)
install.packages("jsonlite")
library(jsonlite)
install.packages("tidyverse")
library(tidyverse)
library(ggplot2)
file_path <- "~/Downloads/homeless-population-by-state-2024.json"
home_data <- fromJSON(file_path)
file_path2 <- "~/Downloads/welfareData.csv"
wel_data <- read.csv(file_path2)
install.packages("tidyverse")
install.packages("jsonlite")
rm()
file_path <- "~/Downloads/homeless-population-by-state-2024.json"
home_data <- fromJSON(file_path)
file_path2 <- "~/Downloads/welfareData.csv"
wel_data <- read.csv(file_path2)
View(home_data)
home_data_subset <- home_data[, c("State", "HomelessPopulationPer10kResidents")]
colnames(home_data)[which(colnames(home_data) == "state")] <- "State"
home_data_subset <- home_data[, c("State", "HomelessPopulationPer10kResidents")]
wel_data_subset <- wel_data[, c("State", "Dollar")]
wel_data_subset$Dollar <- wel_data_set$Dollar / 10
View(wel_data_subset)
wel_data_subset$Dollar <- wel_data_subset$Dollar / 10
View(wel_data)
wel_data_subset$Dollar <- as.integer(wel_data_subset$Dollar)
View(wel_data_subset)
wel_data_subset$Dollar <- as.numeric(wel_data_subset$Dollar)
wel_data_subset <- wel_data[, c("State", "Dollar")]
View(wel_data_subset)
wel_data_subset$Dollar <- as.numeric(wel_data_subset$Dollar)
wel_data_subset <- wel_data[, c("State", "Dollar")]
file_path <- "~/Downloads/homeless-population-by-state-2024.json"
home_data <- fromJSON(file_path)
file_path2 <- "~/Downloads/welfareData2.csv"
wel_data2 <- read.csv(file_path2)
View(wel_data)
View(wel_data_subset)
file_path <- "~/Downloads/homeless-population-by-state-2024.json"
home_data <- fromJSON(file_path)
file_path2 <- "~/Downloads/welfareData3.csv"
wel_data3 <- read.csv(file_path2)
file_path <- "~/Downloads/homeless-population-by-state-2024.json"
home_data <- fromJSON(file_path)
file_path2 <- "~/Downloads/welfareData4.csv"
wel_data4 <- read.csv(file_path2)
home_data_subset2 <- home_data[, c("State", "HomelessPopulationPer10kResidents")]
file_path <- "~/Downloads/homeless-population-by-state-2024.json"
home_data <- fromJSON(file_path)
file_path2 <- "~/Downloads/welfareData.csv"
wel_data <- read.csv(file_path2)
home_data_subset2 <- home_data[, c("State", "HomelessPopulationPer10kResidents")]
file_path <- "~/Downloads/homeless-population-by-state-2024.json"
home_data <- fromJSON(file_path)
file_path2 <- "~/Downloads/welfareData4.csv"
wel_data4 <- read.csv(file_path2)
colnames(home_data)[which(colnames(home_data) == "state")] <- "State"
home_data_subset <- home_data[, c("State", "HomelessPopulationPer10kResidents")]
merged_data <- merge(home_data_subset, wel_data_set, by = "State")
merged_data <- merge(home_data_subset, wel_data4, by = "State")
View(merged_data)
custom_theme <- theme_minimal() +
theme(
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
legend.title = element_blank(),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_rect(fill = "white", color = "black"),
panel.border = element_rect(color = "black", fill = NA)
)
# Create the plot with custom styling
ggplot(merged_data, aes(x = Dollar, y = HomelessPopulationPer10kResidents)) +
geom_point(color = "dodgerblue", alpha = 0.7, size = 3) +  # Customize point appearance
labs(
x = "Public Welfare State Expenditures Per Capita",
y = "Homelessness Population Per 10K Residents by State",
title = "State Welfare Expenditures vs. Homelessness Population"
) +
custom_theme  # Apply custom theme
custom_theme <- theme_minimal() +
theme(
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.title = element_text(size = 12),
axis.text = element_text(size = 10),
legend.title = element_blank(),
legend.text = element_text(size = 10),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
plot.background = element_rect(fill = "white", color = "black"),
panel.border = element_rect(color = "black", fill = NA)
)
# Create the plot with custom styling
ggplot(merged_data, aes(x = Amount, y = HomelessPopulationPer10kResidents)) +
geom_point(color = "dodgerblue", alpha = 0.7, size = 3) +  # Customize point appearance
labs(
x = "Public Welfare State Expenditures Per Capita",
y = "Homelessness Population Per 10K Residents by State",
title = "State Welfare Expenditures vs. Homelessness Population"
) +
custom_theme  # Apply custom theme
clear
rm()
file_path <- "~/Downloads/taxRateMigrationData.csv"
# Read the CSV file into a data frame
data <- read.csv(file_path)
View(data)
file_path <- "~/Downloads/party.csv"
# Read the CSV file into a data frame
data <- read.csv(file_path)
View(data)
file_path <- "~/Downloads/taxRateMigrationData.csv"
# Read the CSV file into a data frame
data <- read.csv(file_path)
file_path <- "~/Downloads/party.csv"
# Read the CSV file into a data frame
part_data <- read.csv(file_path)
View(part_data)
file_path <- "~/Downloads/party.csv"
# Read the CSV file into a data frame
party_data <- read.csv(file_path)
View(part_data)
View(party_data)
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
merged_data <- left_join(data, party_data, by = "State")
View(merged_data)
ggplot(merged_data, aes(x = Effective.Tax.Rate, y = Outbound, color = Party)) +
geom_point() +
scale_color_manual(values = c("Republican" = "red", "Democrat" = "blue")) +
labs(x = "Effective Tax Rate", y = "Outbound") +
theme_minimal()
ggplot(merged_data, aes(x = Effective.Tax.Rate, y = Outbound, color = Party)) +
geom_point() +
scale_color_manual(values = c("Republican" = "red", "Democrat" = "blue")) +
labs(x = "Effective Tax Rate", y = "Outbound") +
theme_minimal()
ggplot(merged_data, aes(x = Effective.Tax.Rate, y = Inbound, color = Party)) +
geom_point() +
scale_color_manual(values = c("Republican" = "red", "Democrat" = "blue")) +
labs(x = "Effective Tax Rate", y = "Outbound") +
theme_minimal()
ggplot(merged_data, aes(x = Effective.Tax.Rate, y = Outbound, color = Party)) +
geom_point() +
scale_color_manual(values = c("Republican" = "red", "Democrat" = "blue")) +
labs(x = "Effective Tax Rate", y = "Outbound") +
theme_minimal()
ggplot(merged_data, aes(x = Effective.Tax.Rate, y = Outbound, color = Party)) +
geom_point(shape = 16, size = 3) +
scale_color_manual(values = c("Republican" = "#E91D0E", "Democrat" = "#0056B3")) +
labs(
x = "Effective Tax Rate",
y = "Outbound",
title = "Outbound Migration vs. Effective Tax Rate by Party",
subtitle = "Data for Lower 48 States (2020 Election)",
caption = "Source: Your Source Here | Graphic: Your Name"
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 14, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 1),
axis.title = element_text(size = 11, face = "bold"),
axis.text = element_text(size = 10),
legend.title = element_blank(),
legend.text = element_text(size = 10)
)
ggplot(merged_data, aes(x = Effective.Tax.Rate, y = Outbound, color = Party)) +
geom_point(shape = 16, size = 3) +
scale_color_manual(values = c("Republican" = "#E91D0E", "Democrat" = "#0056B3")) +
labs(
x = "Effective Tax Rate",
y = "Outbound",
title = "Outbound Migration vs. Effective Tax Rate by Party",
subtitle = "Data for Lower 48 States (2020 Election)",
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 14, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 1),
axis.title = element_text(size = 11, face = "bold"),
axis.text = element_text(size = 10),
legend.title = element_blank(),
legend.text = element_text(size = 10)
)
ggplot(merged_data, aes(x = Effective.Tax.Rate, y = Outbound, color = Party)) +
geom_point(shape = 16, size = 3) +
scale_color_manual(values = c("Republican" = "#E91D0E", "Democrat" = "#0056B3")) +
labs(
x = "Effective Tax Rate",
y = "Outbound",
title = "Outbound Migration vs. Effective Tax Rate by State",
subtitle = "Data for Lower 48 States (2020 Election)",
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 14, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 1),
axis.title = element_text(size = 11, face = "bold"),
axis.text = element_text(size = 10),
legend.title = element_blank(),
legend.text = element_text(size = 10)
)
ggplot(merged_data, aes(x = Effective.Tax.Rate, y = Outbound, color = Party)) +
geom_point(shape = 16, size = 3) +
scale_color_manual(values = c("Republican" = "#E91D0E", "Democrat" = "#0056B3")) +
labs(
x = "Effective Tax Rate",
y = "Outbound",
title = "Net Outbound Migration Percentage vs. Effective Tax Rate by State",
subtitle = "Data for Lower 48 States (2020 Election)",
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 14, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 1),
axis.title = element_text(size = 11, face = "bold"),
axis.text = element_text(size = 10),
legend.title = element_blank(),
legend.text = element_text(size = 10)
)
ggplot(merged_data, aes(x = Effective.Tax.Rate, y = Outbound, color = Party)) +
geom_point(shape = 16, size = 3) +
scale_color_manual(values = c("Republican" = "#E91D0E", "Democrat" = "#0056B3")) +
labs(
x = "Effective Tax Rate",
y = "Outbound",
title = "Net Outbound Migration Percentage vs. Effective Tax Rate by State",
subtitle = "Data for Lower 48 States (2020 Election)",
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 12, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 1),
axis.title = element_text(size = 11, face = "bold"),
axis.text = element_text(size = 10),
legend.title = element_blank(),
legend.text = element_text(size = 10)
)
ggplot(merged_data, aes(x = Effective.Tax.Rate, y = Inbound, color = Party)) +
geom_point(shape = 16, size = 3) +
scale_color_manual(values = c("Republican" = "#E91D0E", "Democrat" = "#0056B3")) +
labs(
x = "Effective Tax Rate",
y = "Inbound",
title = "Net Inbound Migration Percentage vs. Effective Tax Rate by State",
subtitle = "Data for Lower 48 States (2020 Election)",
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 12, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 1),
axis.title = element_text(size = 11, face = "bold"),
axis.text = element_text(size = 10),
legend.title = element_blank(),
legend.text = element_text(size = 10)
)
ggplot(merged_data, aes(x = Outbound, y = Effective.Tax.Rate, color = Party)) +
geom_point(shape = 16, size = 3) +
scale_color_manual(values = c("Republican" = "#E91D0E", "Democrat" = "#0056B3")) +
labs(
x = "Outbound",
y = "Effective Tax Rate",
title = "Effective Tax Rate vs. Outbound Migration by Party",
subtitle = "Data for Lower 48 States (2020 Election)",
caption = "Source: Your Source Here | Graphic: Your Name"
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 14, hjust = 0.5),
plot.subtitle = element_text(size = 12, hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 1),
axis.title = element_text(size = 11, face = "bold"),
axis.text = element_text(size = 10),
legend.title = element_blank(),
legend.text = element_text(size = 10)
)
ggplot(merged_data, aes(x = Effective.Tax.Rate, y = Inbound, color = Party)) +
geom_point(shape = 16, size = 3) +
scale_color_manual(values = c("Republican" = "#E91D0E", "Democrat" = "#0056B3")) +
labs(
x = "Effective Tax Rate",
y = "Inbound",
title = "Net Inbound Migration Percentage vs. Effective Tax Rate by State",
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 12, hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 1),
axis.title = element_text(size = 11, face = "bold"),
axis.text = element_text(size = 10),
legend.title = element_blank(),
legend.text = element_text(size = 10)
)
ggplot(merged_data, aes(x = Effective.Tax.Rate, y = Outbound, color = Party)) +
geom_point(shape = 16, size = 3) +
scale_color_manual(values = c("Republican" = "#E91D0E", "Democrat" = "#0056B3")) +
labs(
x = "Effective Tax Rate",
y = "Outbound",
title = "Net Outbound Migration Percentage vs. Effective Tax Rate by State",
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 12, hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 1),
axis.title = element_text(size = 11, face = "bold"),
axis.text = element_text(size = 10),
legend.title = element_blank(),
legend.text = element_text(size = 10)
)
ggplot(merged_data, aes(x = Effective.Tax.Rate, y = Inbound, color = Party)) +
geom_point(shape = 16, size = 3) +
scale_color_manual(values = c("Republican" = "#E91D0E", "Democrat" = "#0056B3")) +
labs(
x = "Effective Tax Rate",
y = "Inbound",
title = "Net Inbound Migration Percentage vs. Effective Tax Rate by State",
) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 12, hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 1),
axis.title = element_text(size = 11, face = "bold"),
axis.text = element_text(size = 10),
legend.title = element_blank(),
legend.text = element_text(size = 10)
)
ggplot(merged_data, aes(x = Effective.Tax.Rate, y = Inbound, color = Party)) +
geom_point(shape = 16, size = 3) +
scale_color_manual(values = c("Republican" = "#E91D0E", "Democrat" = "#0056B3")) +
labs(
x = "Effective Tax Rate",
y = "Inbound",
title = "Net Inbound Migration Percentage vs. Effective Tax Rate by State",
) +
geom_hline(yintercept = 50, linetype = "dotted", color = "black", size = 1) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 12, hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 1),
axis.title = element_text(size = 11, face = "bold"),
axis.text = element_text(size = 10),
legend.title = element_blank(),
legend.text = element_text(size = 10)
)
ggplot(merged_data, aes(x = Effective.Tax.Rate, y = Inbound, color = Party)) +
geom_point(shape = 16, size = 3) +
scale_color_manual(values = c("Republican" = "#E91D0E", "Democrat" = "#0056B3")) +
labs(
x = "Effective Tax Rate",
y = "Net Migration Percentage",
title = "Net Migration Percentage vs. Effective Tax Rate by State",
) +
geom_hline(yintercept = 50, linetype = "dotted", color = "black", size = 1) +
theme_minimal() +
theme(
plot.title = element_text(face = "bold", size = 12, hjust = 0.5),
plot.caption = element_text(size = 10, hjust = 1),
axis.title = element_text(size = 11, face = "bold"),
axis.text = element_text(size = 10),
legend.title = element_blank(),
legend.text = element_text(size = 10)
)
setwd("~/Dropbox/src 2024/supreme court response order/survey data cleaning code/cleaned survey data")
install.packages("haven")
library(haven)
data1 <- read_dta("supremecourtsurveydata2010_cleaned.dta")
View(data1)
data2020 <- read_dta("supremecourtsurveydata2020_cleaned.dta")
data2021 <- read_dta("supremecourtsurveydata2021_cleaned.dta")
data2022 <- read_dta("supremecourtsurveydata2022_cleaned.dta")
data2023 <- read_dta("supremecourtsurveydata2023_cleaned.dta")
data2024 <- read_dta("supremecourtsurveydata2024_cleaned.dta")
View(data1)
View(data2020)
View(data2021)
View(data2022)
View(data2023)
View(data2024)
colnames(2020)
colnames(data2020)
colnames(data2021)
colnames(data2023)
