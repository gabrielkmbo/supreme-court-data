# educ
DAT$educ.std <- scale(DAT$educ)
# pid
DAT$pid.std <- scale(ifelse(DAT$pid7==8, 4, DAT$pid7))
# fkscore
DAT$fkscore.std <- scale(DAT$fkscore)
# nytfront
DAT$nytfront.std <- scale(DAT$nytfront)
# godgaysguns
DAT$godgaysguns.std <- scale(DAT$godgaysguns)
### CREATING QUESTION COMPLEXITY INDEX
# as first principal component of: fkscore, verbs per sentence,
#                                  complex words per sentence, subclauses per sentence
pca.complexity <- princomp(~ scale(fkscore) + scale(verbs.persent) +
scale(complexwords.persent) + scale(subclause.persent),
data=DAT)
DAT$complexity <- pca.complexity$scores[,1]
#############
#############
## TABLE 1 ##
#############
#############
## T1 Model 1: Regressing response on form A dummy (and wave FEs)
reg.bivar <- lm_robust(case2 ~ forma + as.factor(wave),
data=DAT, weights=weight,
clusters=respid, se_type="stata")
setwd("/Users/gabrielbo/Downloads/summer 24 research/dataverse_files (3)")
View(DAT)
View(CASEDATA)
View(FULLMERGE)
View(DAT)
View(DAT)
View(DAT)
View(DAT)
DAT$knowledge
View(CASEDATA)
library(rio)
library(estimatr)
library(ggplot2)
library(ggeffects)
# loading survey data
FULLMERGE <- import("fullmerge.dta")
# loading case metadata
CASEDATA <- import("casemetadata.dta")
CASEDATA$casename[CASEDATA$casename=="abortion_per" & CASEDATA$wave==4] <- "abortion_per2"
# merging datasets
DAT <- merge(FULLMERGE, CASEDATA, by="cid")
DAT$respid <- as.factor(DAT$resp)
DAT$cid <- as.factor(DAT$cid)
DAT$wave <- as.factor(DAT$wave.x)
DAT <- subset(DAT, wave!=1 & personal==1 & cid!=75)
# generating knowledge variable (proportion of items correct)
DAT$knowledge <- ifelse(DAT$wave==1,
DAT$total_correct/3, # note only 3 items in first wave
DAT$total_correct/6) # 6 items in subsequent waves
# generating question-specific language variables
DAT$words <- rowMeans(cbind(DAT$wordsa,DAT$wordsb), na.rm=TRUE)
DAT$logwords <- log(DAT$words)
DAT$verbs <- rowMeans(cbind(DAT$verbsaub,DAT$verbsbub), na.rm=TRUE)
DAT$sentences <- rowMeans(cbind(DAT$sentencesa, DAT$sentencesb), na.rm=TRUE)
DAT$verbs.persent <- DAT$verbs /DAT$sentences
DAT$subclause <- rowMeans(cbind(DAT$subclausea,DAT$subclauseb), na.rm=TRUE)
DAT$subclause.persent <- DAT$subclause / DAT$sentences
DAT$complexwords <- rowMeans(cbind(DAT$complexwordsa,DAT$complexwordsb), na.rm=TRUE)
DAT$complexwords.persent <- DAT$complexwords / DAT$sentences
DAT$fkscore <- rowMeans(cbind(DAT$fkscorea,DAT$fkscoreb), na.rm=TRUE)
DAT$fkgrade <- rowMeans(cbind(DAT$fkgradea,DAT$fkgradeb), na.rm=TRUE)
DAT$fogindex <- rowMeans(cbind(DAT$fogindexa,DAT$fogindexb), na.rm=TRUE)
# number of characters (including spaces)
DAT$characters <- rowMeans(cbind(DAT$chara, DAT$charb))
# creating reverse-coded case2 var
# so 1 is option that was listed on top in form A
DAT$case2 <- DAT$case - 1
# creating 0 to 1 control variables
DAT$age01 <- (DAT$age4 - 1)/3
DAT$educ01 <- (DAT$educ-1)/5
DAT$pid01 <- (DAT$pid7-1)/6
DAT$pid01[DAT$pid01>1] <- NA
# creating standardized control variables for big regression
# age
DAT$age.std <- scale(DAT$age4)
# race (converting to 4 point first
# 1=white, 2=black, 3=hispanic, 4= other)
DAT$white <- DAT$race==1
DAT$white.std <- scale(DAT$white)
# gender
DAT$male.std <- scale(DAT$gender==1)
# educ
DAT$educ.std <- scale(DAT$educ)
# pid
DAT$pid.std <- scale(ifelse(DAT$pid7==8, 4, DAT$pid7))
# fkscore
DAT$fkscore.std <- scale(DAT$fkscore)
# nytfront
DAT$nytfront.std <- scale(DAT$nytfront)
# godgaysguns
DAT$godgaysguns.std <- scale(DAT$godgaysguns)
### CREATING QUESTION COMPLEXITY INDEX
# as first principal component of: fkscore, verbs per sentence,
#                                  complex words per sentence, subclauses per sentence
pca.complexity <- princomp(~ scale(fkscore) + scale(verbs.persent) +
scale(complexwords.persent) + scale(subclause.persent),
data=DAT)
DAT$complexity <- pca.complexity$scores[,1]
View(DAT)
library(rio)
library(estimatr)
library(ggplot2)
library(ggeffects)
# loading survey data
FULLMERGE <- import("fullmerge.dta")
# loading case metadata
CASEDATA <- import("casemetadata.dta")
CASEDATA$casename[CASEDATA$casename=="abortion_per" & CASEDATA$wave==4] <- "abortion_per2"
# merging datasets
DAT <- merge(FULLMERGE, CASEDATA, by="cid")
DAT$respid <- as.factor(DAT$resp)
DAT$cid <- as.factor(DAT$cid)
DAT$wave <- as.factor(DAT$wave.x)
DAT <- subset(DAT, wave!=1 & personal==1 & cid!=75)
# generating knowledge variable (proportion of items correct)
DAT$knowledge <- ifelse(DAT$wave==1,
DAT$total_correct/3, # note only 3 items in first wave
DAT$total_correct/6) # 6 items in subsequent waves
# generating question-specific language variables
DAT$words <- rowMeans(cbind(DAT$wordsa,DAT$wordsb), na.rm=TRUE)
DAT$logwords <- log(DAT$words)
DAT$verbs <- rowMeans(cbind(DAT$verbsaub,DAT$verbsbub), na.rm=TRUE)
DAT$sentences <- rowMeans(cbind(DAT$sentencesa, DAT$sentencesb), na.rm=TRUE)
DAT$verbs.persent <- DAT$verbs /DAT$sentences
DAT$subclause <- rowMeans(cbind(DAT$subclausea,DAT$subclauseb), na.rm=TRUE)
DAT$subclause.persent <- DAT$subclause / DAT$sentences
DAT$complexwords <- rowMeans(cbind(DAT$complexwordsa,DAT$complexwordsb), na.rm=TRUE)
DAT$complexwords.persent <- DAT$complexwords / DAT$sentences
DAT$fkscore <- rowMeans(cbind(DAT$fkscorea,DAT$fkscoreb), na.rm=TRUE)
DAT$fkgrade <- rowMeans(cbind(DAT$fkgradea,DAT$fkgradeb), na.rm=TRUE)
DAT$fogindex <- rowMeans(cbind(DAT$fogindexa,DAT$fogindexb), na.rm=TRUE)
# number of characters (including spaces)
DAT$characters <- rowMeans(cbind(DAT$chara, DAT$charb))
# creating reverse-coded case2 var
# so 1 is option that was listed on top in form A
DAT$case2 <- DAT$case - 1
# creating 0 to 1 control variables
DAT$age01 <- (DAT$age4 - 1)/3
DAT$educ01 <- (DAT$educ-1)/5
DAT$pid01 <- (DAT$pid7-1)/6
DAT$pid01[DAT$pid01>1] <- NA
# creating standardized control variables for big regression
# age
DAT$age.std <- scale(DAT$age4)
# race (converting to 4 point first
# 1=white, 2=black, 3=hispanic, 4= other)
DAT$white <- DAT$race==1
DAT$white.std <- scale(DAT$white)
# gender
DAT$male.std <- scale(DAT$gender==1)
# educ
DAT$educ.std <- scale(DAT$educ)
# pid
DAT$pid.std <- scale(ifelse(DAT$pid7==8, 4, DAT$pid7))
# fkscore
DAT$fkscore.std <- scale(DAT$fkscore)
# nytfront
DAT$nytfront.std <- scale(DAT$nytfront)
# godgaysguns
DAT$godgaysguns.std <- scale(DAT$godgaysguns)
### CREATING QUESTION COMPLEXITY INDEX
# as first principal component of: fkscore, verbs per sentence,
#                                  complex words per sentence, subclauses per sentence
# pca.complexity <- princomp(~ scale(fkscore) + scale(verbs.persent) +
#                              scale(complexwords.persent) + scale(subclause.persent),
#                            data=DAT)
# DAT$complexity <- pca.complexity$scores[,1]
#############
#############
## TABLE 1 ##
#############
#############
## T1 Model 1: Regressing response on form A dummy (and wave FEs)
reg.bivar <- lm_robust(case2 ~ forma + as.factor(wave),
data=DAT, weights=weight,
clusters=respid, se_type="stata")
summary(reg.bivar)
library(rio)
library(estimatr)
library(ggplot2)
library(ggeffects)
# loading survey data
FULLMERGE <- import("fullmerge.dta")
# loading case metadata
CASEDATA <- import("casemetadata.dta")
CASEDATA$casename[CASEDATA$casename=="abortion_per" & CASEDATA$wave==4] <- "abortion_per2"
# merging datasets
DAT <- merge(FULLMERGE, CASEDATA, by="cid")
DAT$respid <- as.factor(DAT$resp)
DAT$cid <- as.factor(DAT$cid)
DAT$wave <- as.factor(DAT$wave.x)
DAT <- subset(DAT, wave!=1 & personal==1 & cid!=75)
# generating knowledge variable (proportion of items correct)
DAT$knowledge <- ifelse(DAT$wave==1,
DAT$total_correct/3, # note only 3 items in first wave
DAT$total_correct/6) # 6 items in subsequent waves
# generating question-specific language variables
DAT$words <- rowMeans(cbind(DAT$wordsa,DAT$wordsb), na.rm=TRUE)
DAT$logwords <- log(DAT$words)
DAT$verbs <- rowMeans(cbind(DAT$verbsaub,DAT$verbsbub), na.rm=TRUE)
DAT$sentences <- rowMeans(cbind(DAT$sentencesa, DAT$sentencesb), na.rm=TRUE)
DAT$verbs.persent <- DAT$verbs /DAT$sentences
DAT$subclause <- rowMeans(cbind(DAT$subclausea,DAT$subclauseb), na.rm=TRUE)
DAT$subclause.persent <- DAT$subclause / DAT$sentences
DAT$complexwords <- rowMeans(cbind(DAT$complexwordsa,DAT$complexwordsb), na.rm=TRUE)
DAT$complexwords.persent <- DAT$complexwords / DAT$sentences
DAT$fkscore <- rowMeans(cbind(DAT$fkscorea,DAT$fkscoreb), na.rm=TRUE)
DAT$fkgrade <- rowMeans(cbind(DAT$fkgradea,DAT$fkgradeb), na.rm=TRUE)
DAT$fogindex <- rowMeans(cbind(DAT$fogindexa,DAT$fogindexb), na.rm=TRUE)
# number of characters (including spaces)
DAT$characters <- rowMeans(cbind(DAT$chara, DAT$charb))
# creating reverse-coded case2 var
# so 1 is option that was listed on top in form A
DAT$case2 <- DAT$case - 1
# creating 0 to 1 control variables
DAT$age01 <- (DAT$age4 - 1)/3
DAT$educ01 <- (DAT$educ-1)/5
DAT$pid01 <- (DAT$pid7-1)/6
DAT$pid01[DAT$pid01>1] <- NA
# creating standardized control variables for big regression
# age
DAT$age.std <- scale(DAT$age4)
# race (converting to 4 point first
# 1=white, 2=black, 3=hispanic, 4= other)
DAT$white <- DAT$race==1
DAT$white.std <- scale(DAT$white)
# gender
DAT$male.std <- scale(DAT$gender==1)
# educ
DAT$educ.std <- scale(DAT$educ)
# pid
DAT$pid.std <- scale(ifelse(DAT$pid7==8, 4, DAT$pid7))
# fkscore
DAT$fkscore.std <- scale(DAT$fkscore)
# nytfront
DAT$nytfront.std <- scale(DAT$nytfront)
# godgaysguns
DAT$godgaysguns.std <- scale(DAT$godgaysguns)
### CREATING QUESTION COMPLEXITY INDEX
# as first principal component of: fkscore, verbs per sentence,
#                                  complex words per sentence, subclauses per sentence
# pca.complexity <- princomp(~ scale(fkscore) + scale(verbs.persent) +
#                              scale(complexwords.persent) + scale(subclause.persent),
#                            data=DAT)
# DAT$complexity <- pca.complexity$scores[,1]
#############
#############
## TABLE 1 ##
#############
#############
## T1 Model 1: Regressing response on form A dummy (and wave FEs)
reg.bivar <- lm_robust(case2 ~ forma + as.factor(wave),
data=DAT, weights=weight,
clusters=respid, se_type="stata")
summary(reg.bivar)
# ## T1 Model 2: interacting `forma` with `words` (with wave FEs)
#
# reg.iwords <- lm_robust(case2 ~ forma*words + forma*fkscore + as.factor(wave),
#                         data=DAT, weights=weight,
#                         clusters=respid, se_type="stata")
# summary(reg.iwords)
#
# ## Figure 1
# pdf("Figure1.pdf",
#      height=4, width=4)
# pred.iwords <- ggpredict(reg.iwords, terms=c("words", "forma"))
# plot(pred.iwords, limits=c(.3, .6), colors="bw") +
#   labs(
#     x = "words",
#     y = "Prob(Selecting First Choice in Form A)",
#     title = NULL
#   ) +
#   scale_linetype_discrete(
#     guide = guide_legend(reverse = TRUE),
#     name = "Form",
#     labels=c("B", "A")
#     )
# dev.off()
## T1 Model 3: interacting `forma` with `knowledge` (with wave FEs)
reg.iknowledge <- lm_robust(case2 ~ forma*knowledge + forma*educ + as.factor(wave),
data=DAT, weights=weight,
clusters=respid, se_type="stata")
summary(reg.iknowledge)
library(rio)
library(estimatr)
library(ggplot2)
library(ggeffects)
# loading survey data
FULLMERGE <- import("2023_24fullmerge.dta")
# loading case metadata
CASEDATA <- import("2023_24casemetadata.dta")
CASEDATA$casename[CASEDATA$casename=="abortion_per" & CASEDATA$wave==4] <- "abortion_per2"
# merging datasets
DAT <- merge(FULLMERGE, CASEDATA, by="cid")
DAT$respid <- as.factor(DAT$resp)
DAT$cid <- as.factor(DAT$cid)
DAT$wave <- as.factor(DAT$wave.x)
DAT <- subset(DAT, wave!=1 & personal==1 & cid!=75)
# generating knowledge variable (proportion of items correct)
DAT$knowledge <- ifelse(DAT$wave==1,
DAT$total_correct/3, # note only 3 items in first wave
DAT$total_correct/6) # 6 items in subsequent waves
# generating question-specific language variables
DAT$words <- rowMeans(cbind(DAT$wordsa,DAT$wordsb), na.rm=TRUE)
DAT$logwords <- log(DAT$words)
DAT$verbs <- rowMeans(cbind(DAT$verbsaub,DAT$verbsbub), na.rm=TRUE)
DAT$sentences <- rowMeans(cbind(DAT$sentencesa, DAT$sentencesb), na.rm=TRUE)
DAT$verbs.persent <- DAT$verbs /DAT$sentences
DAT$subclause <- rowMeans(cbind(DAT$subclausea,DAT$subclauseb), na.rm=TRUE)
DAT$subclause.persent <- DAT$subclause / DAT$sentences
DAT$complexwords <- rowMeans(cbind(DAT$complexwordsa,DAT$complexwordsb), na.rm=TRUE)
DAT$complexwords.persent <- DAT$complexwords / DAT$sentences
DAT$fkscore <- rowMeans(cbind(DAT$fkscorea,DAT$fkscoreb), na.rm=TRUE)
DAT$fkgrade <- rowMeans(cbind(DAT$fkgradea,DAT$fkgradeb), na.rm=TRUE)
DAT$fogindex <- rowMeans(cbind(DAT$fogindexa,DAT$fogindexb), na.rm=TRUE)
# number of characters (including spaces)
DAT$characters <- rowMeans(cbind(DAT$chara, DAT$charb))
# creating reverse-coded case2 var
# so 1 is option that was listed on top in form A
DAT$case2 <- DAT$case - 1
# creating 0 to 1 control variables
DAT$age01 <- (DAT$age4 - 1)/3
DAT$educ01 <- (DAT$educ-1)/5
DAT$pid01 <- (DAT$pid7-1)/6
DAT$pid01[DAT$pid01>1] <- NA
# creating standardized control variables for big regression
# age
DAT$age.std <- scale(DAT$age4)
# race (converting to 4 point first
# 1=white, 2=black, 3=hispanic, 4= other)
DAT$white <- DAT$race==1
DAT$white.std <- scale(DAT$white)
# gender
DAT$male.std <- scale(DAT$gender==1)
# educ
DAT$educ.std <- scale(DAT$educ)
# pid
DAT$pid.std <- scale(ifelse(DAT$pid7==8, 4, DAT$pid7))
# fkscore
DAT$fkscore.std <- scale(DAT$fkscore)
# nytfront
DAT$nytfront.std <- scale(DAT$nytfront)
# godgaysguns
DAT$godgaysguns.std <- scale(DAT$godgaysguns)
### CREATING QUESTION COMPLEXITY INDEX
# as first principal component of: fkscore, verbs per sentence,
#                                  complex words per sentence, subclauses per sentence
# pca.complexity <- princomp(~ scale(fkscore) + scale(verbs.persent) +
#                              scale(complexwords.persent) + scale(subclause.persent),
#                            data=DAT)
# DAT$complexity <- pca.complexity$scores[,1]
#############
#############
## TABLE 1 ##
#############
#############
## T1 Model 1: Regressing response on form A dummy (and wave FEs)
reg.bivar <- lm_robust(case2 ~ forma + as.factor(wave),
data=DAT, weights=weight,
clusters=respid, se_type="stata")
summary(reg.bivar)
# ## T1 Model 2: interacting `forma` with `words` (with wave FEs)
#
# reg.iwords <- lm_robust(case2 ~ forma*words + forma*fkscore + as.factor(wave),
#                         data=DAT, weights=weight,
#                         clusters=respid, se_type="stata")
# summary(reg.iwords)
#
# ## Figure 1
# pdf("Figure1.pdf",
#      height=4, width=4)
# pred.iwords <- ggpredict(reg.iwords, terms=c("words", "forma"))
# plot(pred.iwords, limits=c(.3, .6), colors="bw") +
#   labs(
#     x = "words",
#     y = "Prob(Selecting First Choice in Form A)",
#     title = NULL
#   ) +
#   scale_linetype_discrete(
#     guide = guide_legend(reverse = TRUE),
#     name = "Form",
#     labels=c("B", "A")
#     )
# dev.off()
## T1 Model 3: interacting `forma` with `knowledge` (with wave FEs)
reg.iknowledge <- lm_robust(case2 ~ forma*knowledge + forma*educ + as.factor(wave),
data=DAT, weights=weight,
clusters=respid, se_type="stata")
summary(reg.iknowledge)
library(rio)
library(estimatr)
library(ggplot2)
library(ggeffects)
# loading survey data
FULLMERGE <- import("fullmerge.dta")
# loading case metadata
CASEDATA <- import("casemetadata.dta")
CASEDATA$casename[CASEDATA$casename=="abortion_per" & CASEDATA$wave==4] <- "abortion_per2"
# merging datasets
DAT <- merge(FULLMERGE, CASEDATA, by="cid")
DAT$respid <- as.factor(DAT$resp)
DAT$cid <- as.factor(DAT$cid)
DAT$wave <- as.factor(DAT$wave.x)
DAT <- subset(DAT, wave!=1 & personal==1 & cid!=75)
# generating knowledge variable (proportion of items correct)
DAT$knowledge <- ifelse(DAT$wave==1,
DAT$total_correct/3, # note only 3 items in first wave
DAT$total_correct/6) # 6 items in subsequent waves
# generating question-specific language variables
DAT$words <- rowMeans(cbind(DAT$wordsa,DAT$wordsb), na.rm=TRUE)
DAT$logwords <- log(DAT$words)
DAT$verbs <- rowMeans(cbind(DAT$verbsaub,DAT$verbsbub), na.rm=TRUE)
DAT$sentences <- rowMeans(cbind(DAT$sentencesa, DAT$sentencesb), na.rm=TRUE)
DAT$verbs.persent <- DAT$verbs /DAT$sentences
DAT$subclause <- rowMeans(cbind(DAT$subclausea,DAT$subclauseb), na.rm=TRUE)
DAT$subclause.persent <- DAT$subclause / DAT$sentences
DAT$complexwords <- rowMeans(cbind(DAT$complexwordsa,DAT$complexwordsb), na.rm=TRUE)
DAT$complexwords.persent <- DAT$complexwords / DAT$sentences
DAT$fkscore <- rowMeans(cbind(DAT$fkscorea,DAT$fkscoreb), na.rm=TRUE)
DAT$fkgrade <- rowMeans(cbind(DAT$fkgradea,DAT$fkgradeb), na.rm=TRUE)
DAT$fogindex <- rowMeans(cbind(DAT$fogindexa,DAT$fogindexb), na.rm=TRUE)
# number of characters (including spaces)
DAT$characters <- rowMeans(cbind(DAT$chara, DAT$charb))
# creating reverse-coded case2 var
# so 1 is option that was listed on top in form A
DAT$case2 <- DAT$case - 1
# creating 0 to 1 control variables
DAT$age01 <- (DAT$age4 - 1)/3
DAT$educ01 <- (DAT$educ-1)/5
DAT$pid01 <- (DAT$pid7-1)/6
DAT$pid01[DAT$pid01>1] <- NA
# creating standardized control variables for big regression
# age
DAT$age.std <- scale(DAT$age4)
# race (converting to 4 point first
# 1=white, 2=black, 3=hispanic, 4= other)
DAT$white <- DAT$race==1
DAT$white.std <- scale(DAT$white)
# gender
DAT$male.std <- scale(DAT$gender==1)
# educ
DAT$educ.std <- scale(DAT$educ)
# pid
DAT$pid.std <- scale(ifelse(DAT$pid7==8, 4, DAT$pid7))
# fkscore
DAT$fkscore.std <- scale(DAT$fkscore)
# nytfront
DAT$nytfront.std <- scale(DAT$nytfront)
# godgaysguns
DAT$godgaysguns.std <- scale(DAT$godgaysguns)
### CREATING QUESTION COMPLEXITY INDEX
# as first principal component of: fkscore, verbs per sentence,
#                                  complex words per sentence, subclauses per sentence
# pca.complexity <- princomp(~ scale(fkscore) + scale(verbs.persent) +
#                              scale(complexwords.persent) + scale(subclause.persent),
#                            data=DAT)
# DAT$complexity <- pca.complexity$scores[,1]
#############
#############
## TABLE 1 ##
#############
#############
## T1 Model 1: Regressing response on form A dummy (and wave FEs)
reg.bivar <- lm_robust(case2 ~ forma + as.factor(wave),
data=DAT, weights=weight,
clusters=respid, se_type="stata")
summary(reg.bivar)
# ## T1 Model 2: interacting `forma` with `words` (with wave FEs)
#
# reg.iwords <- lm_robust(case2 ~ forma*words + forma*fkscore + as.factor(wave),
#                         data=DAT, weights=weight,
#                         clusters=respid, se_type="stata")
# summary(reg.iwords)
#
# ## Figure 1
# pdf("Figure1.pdf",
#      height=4, width=4)
# pred.iwords <- ggpredict(reg.iwords, terms=c("words", "forma"))
# plot(pred.iwords, limits=c(.3, .6), colors="bw") +
#   labs(
#     x = "words",
#     y = "Prob(Selecting First Choice in Form A)",
#     title = NULL
#   ) +
#   scale_linetype_discrete(
#     guide = guide_legend(reverse = TRUE),
#     name = "Form",
#     labels=c("B", "A")
#     )
# dev.off()
## T1 Model 3: interacting `forma` with `knowledge` (with wave FEs)
reg.iknowledge <- lm_robust(case2 ~ forma*knowledge + forma*educ + as.factor(wave),
data=DAT, weights=weight,
clusters=respid, se_type="stata")
summary(reg.iknowledge)
setwd("/Users/gabrielbo/Downloads/summer 24 research/R_sessions/session1")
getwd()
d <- read.csv("nations.csv")
View(d)
names(d)
nrow(d)
ncol(d)
dim(d)
summary(d)
d$country
write.csv(d, file = "nations_new.csv")
