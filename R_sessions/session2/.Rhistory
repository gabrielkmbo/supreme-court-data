setwd("/Users/gabrielbo/Downloads/summer 24 research/R_sessions/session2")
## clean up memory and set working directory
rm(list = ls())
getwd()
dir()
## clean up memory and set working directory
rm(list = ls())
getwd()
dir()
#########################
# The Resume Experiment
#########################
## load dataset
d <- read.csv("resume.csv")
names(d)
d$call
table(d$call)
hist(d$call)
d$female <- ifelse(d$sex == "female", 1, 0)
hist(d$female)
View(d)
length(unique(d$firstname))
plot(density(d$call))
unique(d$firstname)
## clean up memory and set working directory
rm(list = ls())
getwd()
dir()
#########################
# The Resume Experiment
#########################
## load dataset
d <- read.csv("resume.csv")
## take a look at the dataset
names(d)
d$call
table(d$call)
## draw the distribution of callback rate
hist(d$call)
d$female <- ifelse(d$sex == "female", 1, 0)
hist(d$female)
plot(density(d$call))
## how many unique first names are there in the dataset?
unique(d$race)
length(unique(d$firstname))
## how many of them are black names and white names, respectively?
world.pop[c(2,3)]
## clean up memory and set working directory
rm(list = ls())
getwd()
dir()
#########################
# The Resume Experiment
#########################
## load dataset
d <- read.csv("resume.csv")
## take a look at the dataset
names(d)
d$call
table(d$call)
## draw the distribution of callback rate
hist(d$call)
d$female <- ifelse(d$sex == "female", 1, 0)
hist(d$female)
plot(density(d$call))
## how many unique first names are there in the dataset?
unique(d$race)
length(unique(d$firstname))
## how many of them are black names and white names, respectively?
#world.pop[c(2,3)]
firstname.black <- d$firstname[which(d$race == "black")]
length(unique(firstname.black))
length(unique(d$firstname[which(d$race == "black")]))
length(unique(d$firstname[which(d$race == "white")]))
bl <- d[which(d$race == "black"), ]
length(unique(bl$firstname))
wh <- d[which(d$race == "white"), ]
## calculate the average callback rates for black and white names
mean(bl$call)
mean(wh$call)
mean(wh$call) - mean(bl$call)
## what's the call back rate for each first name
for (i in 1:10) {
print(i)
}
### Finding call back rates for black sounding names
# step 1: create storage
bl.rate <- rep(NA, 18)
bl.names <- unique(d$firstname[which(d$race == "black")])
# step 2: loop
for (i in 1:18xÎ©) {
firstname.black <- d$firstname[which(d$race == "black")]
length(unique(firstname.black))
d[which(d$race == "white"), ]
length(unique(d[which(d$race == "white"), "firstname"]))
unique(d[which(d$race == "white"), "firstname"])
d[which(d$race == "white"),
d[which(d$race == "white"), "firstname"]
wh <-  d[which(d$race == "white"), "firstname"]
wh <- d[which(d$race == "white"), ]
bl <- d[which(d$race == "black"), ]
length(unique(bl$firstname))
length(unique(d[which(d$race == "white"), "firstname"]))
wh <- d[which(d$race == "white"), ]
bl <- d[which(d$race == "black"), ]
length(unique(bl$firstname))
length(unique(d[which(d$race == "white"), "firstname"]))
wh <- d[which(d$race == "white"), ]
## calculate the average callback rates for black and white names
mean(bl$call)
mean(wh$call)
mean(wh$call) - mean(bl$call)
clear
mean(bl$call)
mean(wh$call)
mean(wh$call) - mean(bl$call)
for (i in 1:10) {
print(i)
}
for (i in firstname) {
print(firstname$call)
}
for (i in firstname) {
print(i$call)
}
for (i in firstname) {
print(i)
}
for (i in firstname.black) {
print(i)
}
for (i in 1:10) {
print(i)
}
avg.call.w <- mean(d[which(d$race == "white"), "call"])
avg.call.w <- mean(d[which(d$race == "white"), "call"])
avg.call.b <- mean(d[which(d$race == "black"), "call"])
for (i in firstname.black) {
print(mean(d[which(d$firstname == i), "call"]))
}
for (i in firstname.black) {
print(i = mean(d[which(d$firstname == i), "call"]))
}
for (i in firstname.black) {
print(i " = " mean(d[which(d$firstname == i), "call"]))
for (i in firstname.black) {
print(i '=' mean(d[which(d$firstname == i), "call"]))
print(i mean(d[which(d$firstname == i), "call"]))
for (i in firstname.black) {
print(i)
print(mean(d[which(d$firstname == i), "call"]))
}
for (i in unique.b) {
print(i)
print(mean(d[which(d$firstname == i), "call"]))
}
unique.b <- unique(d[which(d$race == "black")])
names.b <- unique(d[which(d$race == "black")])
names.b <- unique(d[which(d$race == "black")])
names.b <- unique(d[which(d$race == "black")])
names.b <- unique(d[which(d$race == "black")])
names.b <- unique(d[which(d$race == "black")])
names.b <- unique(d[which(d$race == "black")])
names.b <- unique(d[which(d$race == "black"),])
for (i in names.b) {
print(i)
print(mean(d[which(d$firstname == i), "call"]))
}
names.b <- unique(d$firstname[which(d$race == "black")])
for (i in names.b) {
print(i)
print(mean(d[which(d$firstname == i), "call"]))
}
for (i in names.w) {
print(i)
print(mean(d[which(d$firstname == i), "call"]))
}
names.w <- unique(d$firstname[which(d$race == "white")])
for (i in names.w) {
print(i)
print(mean(d[which(d$firstname == i), "call"]))
}
rep(0,5)
call.bl <- rep(NA, length(names.b))
for (i in names.b) {
print(i)
print(mean(d[which(d$firstname == i), "call"]))
call.bl[i] <- mean(d[which(d$firstname == i), "call"])
}
for (i in 1:18) {
this.name <- names.b[i]
print(this.name)
print(mean(d[which(d$firstname == this.name), "call"]))
call.bl[i] <- mean(d[which(d$firstname == i), "call"])
}
for (i in 1:18) {
this.name <- names.b[i]
print(this.name)
print(mean(d[which(d$firstname == this.name), "call"]))
call.bl[i] <- mean(d[which(d$firstname == this.name), "call"])
}
for (i in 1:18) {
this.name <- names.w[i]
print(this.name)
print(mean(d[which(d$firstname == this.name), "call"]))
call.wh[i] <- mean(d[which(d$firstname == this.name), "call"])
}
call.wh <- rep(NA, length(names.w))
for (i in 1:18) {
this.name <- names.w[i]
print(this.name)
print(mean(d[which(d$firstname == this.name), "call"]))
call.wh[i] <- mean(d[which(d$firstname == this.name), "call"])
}
plot(density(call.bl))
plot(density(call.bl))
plot(density(call.wh))
plot(density(call.bl), density(call.wh))
dens1 <- density(call.wh)
dens2 <- density(call.bl)
plot(dens1, main = "Density Plot", xlim = range(c(dens1$x, dens2$x)), ylim = range(c(dens1$y, dens2$y)),
xlab = "X", ylab = "Density", col = "blue", lwd = 2)
lines(dens2$x, dens2$y, col = "red", lwd = 2)
dens1 <- density(call.wh)
dens2 <- density(call.bl)
plot(dens1, main = "Density Plot", xlim = range(c(dens1$x, dens2$x)), ylim = range(c(dens1$y, dens2$y)),
xlab = "X", ylab = "Density", col = "blue", lwd = 2)
lines(dens2$x, dens2$y, col = "red", lwd = 2)
legend("topright", legend = c("Dataset 1", "Dataset 2"), col = c("blue", "red"), lty = 1, lwd = 2)
