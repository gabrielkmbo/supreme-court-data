ages("rddensity")
# if you don't have these installed already
# then load them with the following two commands:
library(rdrobust)
library(rddensity)
# then look at the first few rows by typing:
head(data)
# make a simple scatterplot of data
plot(Y ~ X)
# put a vertical line at the treatment threshold
abline(v=0)
load("IslamicMayorData.RData")
# make a simple scatterplot of data
plot(Y ~ X)
# if you want, attach the dataset
attach(data)
# then look at the first few rows by typing:
head(data)
plot(T ~ X)
abline(v=0)
# make a simple scatterplot of data
plot(Y ~ X)
# put a vertical line at the treatment threshold
abline(v=0)
# make a simple scatterplot of data
rdplot(Y ~ X)
# make a simple scatterplot of data
rdplot(Y, X)
# VARIABLE DESCRIPTIONS
# Y: educational attainment of women,
#    measured as the percentage of women
#    aged 15 to 20 in 2000 who had completed
#    high school by 2000.
# X: vote margin obtained by the Islamic party
#    in the 1994 Turkish mayoral elections,
#    measured as the vote percentage obtained
#    by the Islamic party minus the vote percentage
#    obtained by its strongest secular party opponent.
# T: electoral victory of the Islamic party in 1994,
#    equal to 1 if the Islamic party won the mayoral
#    election and 0 otherwise.
library(rdrobust)
library(rddensity)
# Loading the data and defining the main variables
load("IslamicMayorData.RData")
attach(data)
# looking at first few rows
head(data)
# raw comparison of means
# by threshold side
rdplot(Y, X, p=0,
title="Raw comparison of means",
x.label = "Islamic Margin of Victory",
y.label = "Female High School Percentage")
# local comparison of means
rdplot(Y[abs(X) <= 50], X[abs(X) <= 50],
title = "Local comparison of means",
x.label = "Islamic Margin of Victory",
y.label = "Female High School Percentage")
rdplot(Y, X, p=0,
title="Raw comparison of means",
x.label = "Islamic Margin of Victory",
y.label = "Female High School Percentage")
# local comparison of means
rdplot(Y[abs(X) <= 50], X[abs(X) <= 50],
title = "Local comparison of means",
x.label = "Islamic Margin of Victory",
y.label = "Female High School Percentage")
# simple scatterplot of data
# score variable vs DV
plot(Y ~ X, pch=20,
xlab = "Islamic Margin of Victory",
ylab = "Female High School Percentage")
abline(v=0)
# rdplot of binned means
rdplot(Y, X,
x.label = "Islamic Margin of Victory",
y.label = "Female High School Percentage")
#----------------------------------------------#
# The Continuity-Based Approach to RD Analysis #
#----------------------------------------------#
# Using two regressions to estimate
out = lm(Y[X < 0 & X >= -20] ~ X[X < 0 & X >= -20])
left_intercept = out$coefficients[1]
print(left_intercept)
out = lm(Y[X >= 0 & X <= 20] ~ X[X >= 0 & X <= 20])
right_intercept = out$coefficients[1]
print(right_intercept)
difference = right_intercept - left_intercept
print(paste("The RD estimator is", difference, sep = " "))
T_X = X * T
out = lm(Y[X >= -20 & X <= 20] ~ X[X >= -20 & X <= 20] + T[X >= -20 & X <= 20] + T_X[X >= -20 & X <= 20])
summary(out)
# Generating triangular weights
w = NA
w[X < 0 & X >= -20] = 1 - abs(X[X < 0 & X >= -20] / 20)
w[X >= 0 & X <= 20] = 1 - abs(X[X >= 0 & X <= 20] / 20)
# Using two regressions and weights to estimate
out = lm(Y[X < 0] ~ X[X < 0], weights = w[X < 0])
left_intercept = out$coefficients[1]
out = lm(Y[X >= 0] ~ X[X >= 0], weights = w[X >= 0])
right_intercept = out$coefficients[1]
difference = right_intercept - left_intercept
print(paste("The RD estimator is", difference, sep = " "))
# Using rdrobust with uniform weights
out = rdrobust(Y, X, kernel = 'uniform',  p = 1, h = 20)
summary(out)
out = rdrobust(Y, X, kernel = 'triangular',  p = 1, h = 20)
summary(out)
out = rdrobust(Y, X, kernel = 'triangular',  p = 2, h = 20)
summary(out)
# Using rdrobust and showing the associated rdplot
bandwidth = rdrobust(Y, X, kernel = 'triangular', p = 1, bwselect = 'mserd')$bws[1,1]
out = rdplot(Y[abs(X) <= bandwidth], X[abs(X) <= bandwidth], p = 1, kernel = 'triangular', cex.axis = 1.5, cex.lab = 1.5)
summary(out)
rdplot(Y[abs(X)<=bandwidth], X[abs(X)<=bandwidth], p = 1, kernel = 'triangular',
x.label = 'Score', y.label = 'Outcome', title = '', y.lim = c(10,22), cex.axis = 1.5, cex.lab = 1.5)
rdplot(Y[abs(X)<=bandwidth], X[abs(X)<=bandwidth], p = 1, kernel = 'triangular',
x.label = 'Score', y.label = 'Outcome', title = '', y.lim = c(10,22))
out = rdrobust(Y, X, kernel = 'triangular',  p = 1, bwselect = 'mserd')
summary(out)
# Using rdrobust with covariates
Z = cbind(data$vshr_islam1994, data$partycount, data$lpop1994,
data$merkezi, data$merkezp, data$subbuyuk, data$buyuk)
colnames(Z) = c("vshr_islam1994", "partycount", "lpop1994",
"merkezi", "merkezp", "subbuyuk", "buyuk")
out = rdrobust(Y, X, covs = Z, kernel = 'triangular', scaleregul = 1, p = 1, bwselect = 'mserd')
summary(out)
# Using rdrobust with clusters
out = rdrobust(Y, X, kernel = 'triangular', scaleregul = 1, p = 1, bwselect = 'mserd', cluster = data$prov_num)
summary(out)
rdplot(Y, X, p=0,
title="Raw comparison of means",
x.label = "Islamic Margin of Victory",
y.label = "Female High School Percentage")
# local comparison of means
rdplot(Y[abs(X) <= 50], X[abs(X) <= 50],
title = "Local comparison of means",
x.label = "Islamic Margin of Victory",
y.label = "Female High School Percentage")
# score variable vs DV
plot(Y ~ X, pch=20,
xlab = "Islamic Margin of Victory",
ylab = "Female High School Percentage")
abline(v=0)
# rdplot of binned means
rdplot(Y, X,
x.label = "Islamic Margin of Victory",
y.label = "Female High School Percentage")
# Using rdrobust with triangular weights
out = rdrobust(Y, X, kernel = 'triangular',  p = 1, h = 20)
summary(out)
out = rdrobust(Y, X, kernel = 'triangular',  p = 2, h = 20)
summary(out)
# Using rdrobust and showing the associated rdplot
bandwidth = rdrobust(Y, X, kernel = 'triangular', p = 1, bwselect = 'mserd')$bws[1,1]
out = rdplot(Y[abs(X) <= bandwidth], X[abs(X) <= bandwidth], p = 1, kernel = 'triangular', cex.axis = 1.5, cex.lab = 1.5)
summary(out)
# Using rdrobust and showing the associated rdplot
bandwidth = rdrobust(Y, X, kernel = 'triangular', p = 1, bwselect = 'mserd')$bws[1,1]
out = rdplot(Y[abs(X) <= bandwidth], X[abs(X) <= bandwidth], p = 1, kernel = 'triangular', cex.axis = 1.5, cex.lab = 1.5)
summary(out)
# Using rdrobust with default options
out = rdrobust(Y, X, kernel = 'triangular',  p = 1, bwselect = 'mserd')
summary(out)
library(rdrobust)
library(rddensity)
# Loading the data and defining the main variables
load("IslamicMayorData.RData")
attach(data)
# looking at first few rows
head(data)
# raw comparison of means
# by threshold side
rdplot(Y, X, p=0,
title="Raw comparison of means",
x.label = "Islamic Margin of Victory",
y.label = "Female High School Percentage")
# local comparison of means
rdplot(Y[abs(X) <= 50], X[abs(X) <= 50],
title = "Local comparison of means",
x.label = "Islamic Margin of Victory",
y.label = "Female High School Percentage")
# make a simple scatterplot of data
plot(Y ~ X)
# put a vertical line at the treatment threshold
abline(v=0)
# local comparison of means
rdplot(Y[abs(X) <= 50], X[abs(X) <= 50],
title = "Local comparison of means",
x.label = "Islamic Margin of Victory",
y.label = "Female High School Percentage")
# rdplot of binned means
rdplot(Y, X,
x.label = "Islamic Margin of Victory",
y.label = "Female High School Percentage")
# Using two regressions to estimate
out = lm(Y[X < 0 & X >= -20] ~ X[X < 0 & X >= -20])
left_intercept = out$coefficients[1]
print(left_intercept)
out = lm(Y[X >= 0 & X <= 20] ~ X[X >= 0 & X <= 20])
right_intercept = out$coefficients[1]
print(right_intercept)
difference = right_intercept - left_intercept
print(paste("The RD estimator is", difference, sep = " "))
T_X = X * T
out = lm(Y[X >= -20 & X <= 20] ~ X[X >= -20 & X <= 20] + T[X >= -20 & X <= 20] + T_X[X >= -20 & X <= 20])
summary(out)
# Generating triangular weights
w = NA
w[X < 0 & X >= -20] = 1 - abs(X[X < 0 & X >= -20] / 20)
w[X >= 0 & X <= 20] = 1 - abs(X[X >= 0 & X <= 20] / 20)
# Using two regressions and weights to estimate
out = lm(Y[X < 0] ~ X[X < 0], weights = w[X < 0])
left_intercept = out$coefficients[1]
out = lm(Y[X >= 0] ~ X[X >= 0], weights = w[X >= 0])
right_intercept = out$coefficients[1]
difference = right_intercept - left_intercept
print(paste("The RD estimator is", difference, sep = " "))
# Using rdrobust with uniform weights
out = rdrobust(Y, X, kernel = 'uniform',  p = 1, h = 20)
summary(out)
# Using rdrobust with triangular weights
out = rdrobust(Y, X, kernel = 'triangular',  p = 1, h = 20)
summary(out)
out = rdrobust(Y, X, kernel = 'triangular',  p = 2, h = 20)
summary(out)
# Using rdrobust and showing the associated rdplot
bandwidth = rdrobust(Y, X, kernel = 'triangular', p = 1, bwselect = 'mserd')$bws[1,1]
out = rdplot(Y[abs(X) <= bandwidth], X[abs(X) <= bandwidth], p = 1, kernel = 'triangular', cex.axis = 1.5, cex.lab = 1.5)
summary(out)
# Using rdrobust with default options
out = rdrobust(Y, X, kernel = 'triangular',  p = 1, bwselect = 'mserd')
summary(out)
#-----------------------------------------------#
# Validation and Falsification of the RD Design #
#-----------------------------------------------#
# RD plots for predetermined covariates
rdplot(data$lpop1994, X,
x.label = "Score", y.label = "1994 Population")
rdplot(data$partycount, X,
x.label = "Score", y.label = "Party Count")
rdplot(data$vshr_islam1994, X,
x.label="Score", y.label = "Islamic Voteshare 1994")
rdplot(data$i89, X,
x.label = "Score", y.label = "Islamic Elected in 1989")
# Formal continuity-based analysis for covariates
# using CER-optimal bandwidth
# this might be more appropriate when, as here,
# we are more interested in inference than
# in estimating a particular effect
summary(rdrobust(data$hischshr1520m, X, bwselect = 'cerrd'))
ensity function, be sure that you
# install/load the rddensity package if you haven't already
out = rddensity(X)
summary(out)
cutoff is at 5
# (not the default of 0)
# Using rdrobust with the cutoff equal to 5
out = rdrobust(Y[X >= 0], X[X >= 0], c = 5)
summary(out)
# Using rdrobust for the donut-hole approach
# by using Y[abs(X) >= 0.3] and X[abs(X) >= 0.3]
# instead of X and Y
# i.e. use only observations at least .3 away
# from the cutoff
out = rdrobust(Y[abs(X) >= 0.3], X[abs(X) >= 0.3])
summary(out)
# conduct a formal density test for the score variable X
# using the rddensity function, be sure that you
# install/load the rddensity package if you haven't already
out = rddensity(X)
summary(out)
plot(rddensity(X))
args(rdrobust)
# install/load the rddensity package if you haven't already
out = rddensity(X)
summary(out)
# VARIABLE DESCRIPTIONS
# Y: educational attainment of women,
#    measured as the percentage of women
#    aged 15 to 20 in 2000 who had completed
#    high school by 2000.
# X: vote margin obtained by the Islamic party
#    in the 1994 Turkish mayoral elections,
#    measured as the vote percentage obtained
#    by the Islamic party minus the vote percentage
#    obtained by its strongest secular party opponent.
# T: electoral victory of the Islamic party in 1994,
#    equal to 1 if the Islamic party won the mayoral
#    election and 0 otherwise.
library(rdrobust)
library(rddensity)
# Loading the data and defining the main variables
load("IslamicMayorData.RData")
attach(data)
# looking at first few rows
head(data)
# raw comparison of means
# by threshold side
rdplot(Y, X, p=0,
title="Raw comparison of means",
x.label = "Islamic Margin of Victory",
y.label = "Female High School Percentage")
# local comparison of means
rdplot(Y[abs(X) <= 50], X[abs(X) <= 50],
title = "Local comparison of means",
x.label = "Islamic Margin of Victory",
y.label = "Female High School Percentage")
# simple scatterplot of data
# score variable vs DV
plot(Y ~ X, pch=20,
xlab = "Islamic Margin of Victory",
ylab = "Female High School Percentage")
abline(v=0)
# rdplot of binned means
rdplot(Y, X,
x.label = "Islamic Margin of Victory",
y.label = "Female High School Percentage")
#----------------------------------------------#
# The Continuity-Based Approach to RD Analysis #
#----------------------------------------------#
# Using two regressions to estimate
out = lm(Y[X < 0 & X >= -20] ~ X[X < 0 & X >= -20])
left_intercept = out$coefficients[1]
print(left_intercept)
out = lm(Y[X >= 0 & X <= 20] ~ X[X >= 0 & X <= 20])
right_intercept = out$coefficients[1]
print(right_intercept)
difference = right_intercept - left_intercept
print(paste("The RD estimator is", difference, sep = " "))
T_X = X * T
out = lm(Y[X >= -20 & X <= 20] ~ X[X >= -20 & X <= 20] + T[X >= -20 & X <= 20] + T_X[X >= -20 & X <= 20])
summary(out)
# Generating triangular weights
w = NA
w[X < 0 & X >= -20] = 1 - abs(X[X < 0 & X >= -20] / 20)
w[X >= 0 & X <= 20] = 1 - abs(X[X >= 0 & X <= 20] / 20)
# Using two regressions and weights to estimate
out = lm(Y[X < 0] ~ X[X < 0], weights = w[X < 0])
left_intercept = out$coefficients[1]
out = lm(Y[X >= 0] ~ X[X >= 0], weights = w[X >= 0])
right_intercept = out$coefficients[1]
difference = right_intercept - left_intercept
print(paste("The RD estimator is", difference, sep = " "))
# Using rdrobust with uniform weights
out = rdrobust(Y, X, kernel = 'uniform',  p = 1, h = 20)
summary(out)
# Using rdrobust with triangular weights
out = rdrobust(Y, X, kernel = 'triangular',  p = 1, h = 20)
summary(out)
out = rdrobust(Y, X, kernel = 'triangular',  p = 2, h = 20)
summary(out)
# Using rdrobust and showing the associated rdplot
bandwidth = rdrobust(Y, X, kernel = 'triangular', p = 1, bwselect = 'mserd')$bws[1,1]
out = rdplot(Y[abs(X) <= bandwidth], X[abs(X) <= bandwidth], p = 1, kernel = 'triangular', cex.axis = 1.5, cex.lab = 1.5)
summary(out)
rdplot(Y[abs(X)<=bandwidth], X[abs(X)<=bandwidth], p = 1, kernel = 'triangular',
x.label = 'Score', y.label = 'Outcome', title = '', y.lim = c(10,22))
# Using rdrobust with default options
out = rdrobust(Y, X, kernel = 'triangular',  p = 1, bwselect = 'mserd')
summary(out)
# Using rdrobust with covariates
Z = cbind(data$vshr_islam1994, data$partycount, data$lpop1994,
data$merkezi, data$merkezp, data$subbuyuk, data$buyuk)
colnames(Z) = c("vshr_islam1994", "partycount", "lpop1994",
"merkezi", "merkezp", "subbuyuk", "buyuk")
out = rdrobust(Y, X, covs = Z, kernel = 'triangular', scaleregul = 1, p = 1, bwselect = 'mserd')
summary(out)
# Using rdrobust with clusters
out = rdrobust(Y, X, kernel = 'triangular', scaleregul = 1, p = 1, bwselect = 'mserd', cluster = data$prov_num)
summary(out)
#-----------------------------------------------#
# Validation and Falsification of the RD Design #
#-----------------------------------------------#
# RD plots for predetermined covariates
rdplot(data$lpop1994, X,
x.label = "Score", y.label = "1994 Population")
rdplot(data$partycount, X,
x.label = "Score", y.label = "Party Count")
rdplot(data$vshr_islam1994, X,
x.label="Score", y.label = "Islamic Voteshare 1994")
rdplot(data$i89, X,
x.label = "Score", y.label = "Islamic Elected in 1989")
# Formal continuity-based analysis for covariates
# using CER-optimal bandwidth
# this might be more appropriate when, as here,
# we are more interested in inference than
# in estimating a particular effect
summary(rdrobust(data$hischshr1520m, X, bwselect = 'cerrd'))
summary(rdrobust(data$i89, X, bwselect = 'cerrd'))
summary(rdrobust(data$vshr_islam1994, X, bwselect = 'cerrd'))
summary(rdrobust(data$partycount, X, bwselect = 'cerrd'))
summary(rdrobust(data$lpop1994, X, bwselect = 'cerrd'))
summary(rdrobust(data$merkezi, X, bwselect = 'cerrd'))
summary(rdrobust(data$merkezp, X, bwselect = 'cerrd'))
summary(rdrobust(data$subbuyuk, X, bwselect = 'cerrd'))
summary(rdrobust(data$buyuk, X, bwselect = 'cerrd'))
# Binomial test
binom.test(53, 100, 1/2)
# Using rddensity
out = rddensity(X)
summary(out)
# PLACEBO TEST
# Using rdrobust with the cutoff equal to 1
out = rdrobust(Y[X >= 0], X[X >= 0], c = 1)
summary(out)
# Using rdrobust for the donut-hole approach
out = rdrobust(Y[abs(X) >= 0.3], X[abs(X) >= 0.3])
summary(out)
# type install.packages("rdrobust")
# and install.packages("rddensity")
# if you don't have these installed already
# then load them with the following two commands:
library(rdrobust)
library(rddensity)
# load dataset
load("IslamicMayorData.RData")
getwd()
# attach the dataset
attach(data)
head(data)
# make a simple scatterplot of data
plot(Y ~ X)
# put a vertical line at the treatment threshold
abline(v=0)
args(rdrobust)
?rdrobust
rdplot(Y, X, p=0,
title="Raw comparison of means",
x.label = "Islamic Margin of Victory",
y.label = "Female High School Percentage")
rdplot(Y, X,
title="Raw comparison of means",
x.label = "Islamic Margin of Victory",
y.label = "Female High School Percentage")
# rdplot of binned means
rdplot(Y, X,
x.label = "Islamic Margin of Victory",
y.label = "Female High School Percentage")
out = rdrobust(Y, X)
summary(out)
# RD plots for predetermined covariates
rdplot(data$lpop1994, X,
x.label = "Score", y.label = "1994 Population")
rdplot(data$vshr_islam1994, X,
x.label="Score", y.label = "Islamic Voteshare 1994")
rdplot(data$i89, X,
x.label = "Score", y.label = "Islamic Elected in 1989")
summary(rdrobust(data$lpop1994, X, bwselect = 'cerrd'))
summary(rdrobust(data$i89, X, bwselect = 'cerrd'))
rd.lpop <- rdrobust(data$lpop1994, X, bwselect = 'cerrd')
summary(rd.lpop)
setwd("~/Dropbox/supremecourt/2021 survey/survey data")
dif()
dir()
library(rio)
DAT <- import("scotus-survey-april-16-2021-variablenamesvaluesnames.csv")
names(DAT)
table(DAT$"Personal Opinion: Cedar Point Nursery v. Hassid (Group A)")
table(DAT$"Personal Opinion: Cedar Point Nursery v. Hassid (Group B)")
(529+558) / (529+542+558+529)
hassid <- ifelse(DAT$"Personal Opinion: Cedar Point Nursery v. Hassid (Group A)"==".", DAT$"Personal Opinion: Cedar Point Nursery v. Hassid (Group B)", DAT$"Personal Opinion: Cedar Point Nursery v. Hassid (Group A)")
table(hassid)
table(substr(1, 13, hassid))
table(substr(hassid, 1, 13))
weighted.mean(substr(hassid, 1, 13)=="States CANNOT", w=DAT$Weight)
hassid <- ifelse(DAT$"Personal Opinion: Cedar Point Nursery v. Hassid (Group A)"==".", DAT$"Personal Opinion: Cedar Point Nursery v. Hassid (Group B)", DAT$"Personal Opinion: Cedar Point Nursery v. Hassid (Group A)")
table(substr(hassid, 1, 13))
weighted.mean(substr(hassid, 1, 13)=="States CANNOT", w=DAT$Weight)
